events {
  worker_connections  4096;  ## Default: 1024
}
http {
  map $request_method $limit {
    default         "";
    POST            $binary_remote_addr;
  }
  limit_req_zone $limit zone=create:10m rate=10r/m;
  server {
      listen 80 default_server;
      listen [::]:80 default_server;
      server_name recor.tech;
    #   return 301 https://$server_name$request_uri;
  }
  server {
      server_name r;
      listen 443 ssl;
      listen [::]:443 ssl;
      # location / {
      #   limit_req zone=create burst=3 nodelay;
      #   proxy_pass http://app:5000/;  #whatever port your app runs on, do proper env vars
      #   proxy_http_version 1.1;
      #   proxy_set_header X-Forwarded-Proto https;
      #   proxy_set_header Upgrade $http_upgrade;
      #   proxy_set_header Connection 'upgrade';
      #   proxy_set_header Host $host;
      #   proxy_cache_bypass $http_upgrade;
      # }
      location / {
        proxy_pass http://app:5000/;  #whatever port your app runs on, do proper env vars
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }
    #   location /janus {
    #     proxy_pass http://janus:8088/janus;  #whatever port your app runs on, do proper env vars
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-Proto https;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    #   }
    #   ssl_certificate /etc/letsencrypt/live/liteboard.io/fullchain.pem;
    #   ssl_certificate_key /etc/letsencrypt/live/liteboard.io/privkey.pem;
  }
}